{"ast":null,"code":"var _jsxFileName = \"/home/gre/projects/langdeck/venv/src/talktalk/talktalk/src/components/ChatCardBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport classes from \"./Layout.module.css\";\nimport ChatOptionPicker from \"./ChatOptionPicker\";\nimport MediaPlayer from './MediaPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatCardBox = ({\n  userName,\n  onSetResponse\n}) => {\n  _s();\n  const [ws, setWs] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [clients, setClients] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [question_tr, setQuestion_tr] = useState('');\n  const [audio, setAudio] = useState('');\n  const [inputData, setInputData] = useState(\"\");\n  const inputRef = useRef(null);\n  const [respondedOption, setRespondedOption] = useState(\"\");\n  const sendMessageHandler = event => {\n    ws.send(respondedOption);\n    inputRef.current.value = \"\";\n  };\n  const setResponse = event => {\n    setRespondedOption(event.target.getAttribute(\"value\"));\n  };\n  useEffect(() => {\n    let socket = new WebSocket(`ws://51.91.8.112:8000/ws/${userName}`);\n    setWs(socket);\n    socket.onmessage = function (event) {\n      let userData = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, userData.message]);\n      let client_ids = [...userData.client_ids];\n      setClients(client_ids);\n      setOptions(userData.options);\n      setQuestion_tr(userData.question_tr);\n      setAudio(userData.audio);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.card__container__blue}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.card__wrapper}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.card__header}`,\n          children: question_tr ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${classes.card__title}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(MediaPlayer, {\n                media_url: audio\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), question_tr]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${classes.card__title}`,\n            children: [\"Wat is de reden van overleg?\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(MediaPlayer, {\n                media_url: audio\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 101\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 95\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), options && options.map((option, index) => {\n          return /*#__PURE__*/_jsxDEV(ChatOptionPicker, {\n            option: option,\n            audio: audio,\n            onSetResponse: setResponse\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.button__wrapper,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputRef,\n            type: \"text\",\n            className: \"p-3 m-2 w-full bg-gray-500 text-white\",\n            placeholder: \"Votre message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), respondedOption, /*#__PURE__*/_jsxDEV(\"button\", {\n            color: \"blue_primary\",\n            m: 2,\n            variant: \"contained\",\n            size: \"small\",\n            onClick: sendMessageHandler,\n            children: \"Envoyer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.log_box,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"p-2 text-gray-500 text-xs text-left mt-4 bg-gray-200\",\n          children: messages.slice(-5).map((message, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [index, \" \", message]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 28\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(ChatCardBox, \"++ZQuleNd0m6nZ9l9eM3Bk5SMSY=\");\n_c = ChatCardBox;\nexport default ChatCardBox;\nvar _c;\n$RefreshReg$(_c, \"ChatCardBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","classes","ChatOptionPicker","MediaPlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatCardBox","userName","onSetResponse","_s","ws","setWs","messages","setMessages","clients","setClients","options","setOptions","question_tr","setQuestion_tr","audio","setAudio","inputData","setInputData","inputRef","respondedOption","setRespondedOption","sendMessageHandler","event","send","current","value","setResponse","target","getAttribute","socket","WebSocket","onmessage","userData","JSON","parse","data","prevMessages","message","client_ids","children","className","card__container__blue","card__wrapper","card__header","card__title","media_url","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","button__wrapper","ref","type","placeholder","color","m","variant","size","onClick","log_box","slice","_c","$RefreshReg$"],"sources":["/home/gre/projects/langdeck/venv/src/talktalk/talktalk/src/components/ChatCardBox.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport classes from \"./Layout.module.css\";\nimport ChatOptionPicker from \"./ChatOptionPicker\";\nimport MediaPlayer from './MediaPlayer';\n\n\nconst ChatCardBox = ({userName, onSetResponse}) => {\n\n    const [ws, setWs] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [clients, setClients] = useState([]);\n    const [options, setOptions] = useState([]);\n    const [question_tr, setQuestion_tr] = useState('');\n    const [audio, setAudio] = useState('');\n    const [inputData, setInputData] = useState (\"\");\n    const inputRef = useRef(null);\n    const [respondedOption, setRespondedOption] = useState(\"\");\n\n    const sendMessageHandler = (event) => {\n        ws.send(respondedOption);\n        inputRef.current.value = \"\";\n    }\n\n    const setResponse = (event) => {\n        setRespondedOption (event.target.getAttribute(\"value\"));\n    }\n\n    useEffect ( () => {\n        let socket = new WebSocket(`ws://51.91.8.112:8000/ws/${userName}`);\n\n        setWs (socket);\n        socket.onmessage = function (event) {\n            let userData = JSON.parse(event.data);\n            setMessages ((prevMessages) => [...prevMessages, userData.message]);\n            let client_ids = [...userData.client_ids];\n            setClients(client_ids);\n            setOptions (userData.options);\n            setQuestion_tr (userData.question_tr);\n            setAudio (userData.audio);\n        };\n    }, []);\n\n    return (\n        <>\n        <div className={`${classes.card__container__blue}`}>\n            <div className={`${classes.card__wrapper}`}>\n                <div className={`${classes.card__header}`}>\n                    {/*<div className={`${classes.card__subtitle}`}>Bonjour {userName}</div>\n                    <div className={`${classes.card__subtitle}`}>{audio}</div>*/}\n                    {question_tr ? (\n                         <div className={`${classes.card__title}`}>\n                            <span><MediaPlayer media_url={audio}/></span>{question_tr}\n                         </div>\n                    ):(\n                        <div className={`${classes.card__title}`}>Wat is de reden van overleg?<span><MediaPlayer media_url={audio}/></span>\n                        </div>\n                    )\n                    }\n                    {/*<div className={`${classes.card__subtitle}`}>{respondedOption}</div>*/}\n                </div>\n                {options && options.map(\n                    (option, index) => {\n                    return (<ChatOptionPicker key={index} option={option} audio={audio} onSetResponse={setResponse}></ChatOptionPicker>)\n                }             \n                )}\n            </div>\n            <div className={classes.button__wrapper}>\n                <div>\n                    <input ref={inputRef} type=\"text\" className='p-3 m-2 w-full bg-gray-500 text-white' placeholder=\"Votre message\"/>\n                    {respondedOption}                    \n                    <button color=\"blue_primary\" m={2} variant=\"contained\" size=\"small\" onClick={sendMessageHandler}>\n                        Envoyer\n                    </button> \n                </div>  \n            </div>   \n            <div className={classes.log_box}>\n            <ul className='p-2 text-gray-500 text-xs text-left mt-4 bg-gray-200'>\n                {messages.slice(-5).map ((message, index) => {\n                    return <li key={index}>{index} {message}</li>;\n                }\n                )}\n            </ul>        \n            </div>            \n        </div>\n        </>\n    )\n}\n\nexport default ChatCardBox"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}